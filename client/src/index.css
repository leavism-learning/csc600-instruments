body {
	margin: 0;
	font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
		'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
		sans-serif;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

code {
	font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
		monospace;
}

* {
	box-sizing: border-box;
}

html,
body,
#root {
	height: 100%;
	width: 100%;
}

:root {
	--sec: rgba(255, 204, 0, 1);
	--pri: rgba(35, 17, 97, 1);
}

.bg-trans {
	background-color: transparent;
}

.pri {
	color: var(--pri);
}

.bg-pri {
	background-color: var(--pri);
}

.b--pri {
	border-color: var(--pri);
}

.sec {
	color: var(--sec);
}

.bg-sec {
	background-color: var(--sec);
}

.b--sec {
	border-color: var(--sec);
}

.trans {
	transition: all 0.2s ease-in-out;
}

.spin {
	-webkit-animation-name: spin;
	-webkit-animation-duration: 1000ms;
	-webkit-animation-iteration-count: infinite;
	-webkit-animation-timing-function: linear;
	-moz-animation-name: spin;
	-moz-animation-duration: 1000ms;
	-moz-animation-iteration-count: infinite;
	-moz-animation-timing-function: linear;
	-ms-animation-name: spin;
	-ms-animation-duration: 1000ms;
	-ms-animation-iteration-count: infinite;
	-ms-animation-timing-function: linear;
	animation-name: spin;
	animation-duration: 1000ms;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
}

@-moz-keyframes spin {
	from {
		-moz-transform: rotate(0deg);
	}
	to {
		-moz-transform: rotate(360deg);
	}
}
@-webkit-keyframes spin {
	from {
		-webkit-transform: rotate(0deg);
	}
	to {
		-webkit-transform: rotate(360deg);
	}
}
@keyframes spin {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
}
.guitar {
	display: flex;
	flex-direction: column;
	align-items: center;
	box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.5); /* Add depth */
	background: linear-gradient(#543118, #a0522d);
	border-radius: 8px; /* Optional: rounded corners */
	padding: 10px;
	color: white;
}

.guitar-string {
	display: flex;
	border-bottom: 2px solid silver; /* Make it look like a string */
	margin: 2px 0; /* Reduce space between strings */
	height: 25px; /* Thin strings */
	width: 100%;
}

.guitar-string:nth-child(6) {
	border: none;
}

.guitar-fret {
	height: 100%; /* Taller frets */
	border-right: 1px solid gray; /* Vertical fret line */
	display: flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	position: relative; /* For inlays */
}

/* Inlays or fret markers */
.guitar-fret::after {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	width: 10px;
	height: 10px;
	background-color: white;
	border-radius: 50%;
	transform: translate(-50%, -50%);
	display: none; /* Hide by default */
}

/* Display inlays on specific frets */
.guitar-fret:nth-child(4)::after,
.guitar-fret:nth-child(6)::after,
.guitar-fret:nth-child(8)::after,
.guitar-fret:nth-child(10)::after,
.guitar-fret:nth-child(13)::after,
.guitar-fret:nth-child(16)::after,
.guitar-fret:nth-child(18)::after,
.guitar-fret:nth-child(20)::after,
.guitar-fret:nth-child(22)::after {
	display: block;
}

.drumkit-container {
	max-height: 47vh;
	overflow-y: auto;
	padding: 10px;
}
.drum-grid {
	margin: 0.35em auto;
	display: grid;
	grid-template-columns: 9% repeat(17, 4vh);
	gap: 1px;
}

.drum-row {
	display: contents;
}

.drum-label {
	grid-column: 1;
	text-align: left;
	margin-right: 10px;
}
.beat-active {
	background-color: #4caf50;
}
.beat {
	width: 4.25vh;
	height: 4vh;
}
.bpm-slider {
	margin: 0 1em;
	align-content: center;
}
.current-beat {
	border: 2px solid rgba(255, 145, 0, 0.75); /* Highlight for the current beat */
}
/* CSS */
.button- {
	margin-right: 1vh;
	--b: 3px; /* border thickness */
	--s: 0.45em; /* size of the corner */
	--color: #373b44;

	padding: calc(0.5em + var(--s)) calc(0.9em + var(--s));
	color: var(--color);
	--_p: var(--s);
	background: conic-gradient(
			from 90deg at var(--b) var(--b),
			#0000 90deg,
			var(--color) 0
		)
		var(--_p) var(--_p) / calc(100% - var(--b) - 2 * var(--_p))
		calc(100% - var(--b) - 2 * var(--_p));
	transition: 0.3s linear, color 0s, background-color 0s;
	outline: var(--b) solid #0000;
	outline-offset: 0.6em;
	font-size: 13px;

	border: 0;

	touch-action: manipulation;
}

.button-:hover,
.button-:focus-visible {
	--_p: 0px;
	outline-color: var(--color);
	outline-offset: 0.05em;
}

.button-:active {
	background: var(--color);
	color: #fff;
}
